name: Main Branch CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup:
    name: Setup Environment & Dependencies
    runs-on: ubuntu-latest
    outputs:
      pnpm-cache-key: ${{ steps.pnpm-cache.outputs.cache-key }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install pnpm (if not already installed or cached)
        run: npm install -g pnpm

      - name: Install Dependencies with pnpm
        id: pnpm-cache
        run: pnpm install --frozen-lockfile

      - name: Upload pnpm modules as artifact
        uses: actions/upload-artifact@v4
        with:
          name: node_modules-pnpm-${{ github.run_id }} # Nome Ãºnico para o artefato
          path: node_modules/
          retention-days: 1

  lint:
    name: Run ESLint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Download pnpm modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node_modules-pnpm-${{ github.run_id }}
          path: node_modules/

      - name: Execute ESLint
        run: pnpm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [setup, lint]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Download pnpm modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node_modules-pnpm-${{ github.run_id }}
          path: node_modules/

      - name: Execute Tests
        run: pnpm test

  build:
    name: Build Production Artifacts
    runs-on: ubuntu-latest
    needs: [setup, lint, test]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Download pnpm modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node_modules-pnpm-${{ github.run_id }}
          path: node_modules/

      - name: Execute Build Script
        run: pnpm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ github.run_id }}
          path: dist/
          retention-days: 7

  publish:
    name: Semantic Release & Publish
    runs-on: ubuntu-latest
    needs: [setup, lint, test, build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Download pnpm modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node_modules-pnpm-${{ github.run_id }}
          path: node_modules/

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output-${{ github.run_id }}
          path: dist/

      - name: Execute Semantic Release
        run: pnpm exec semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
